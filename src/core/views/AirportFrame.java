/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package core.views;

import core.models.Flight;
import core.models.Location;
import core.models.Passenger;
import core.models.Plane;
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edangulo
 */
public class AirportFrame extends javax.swing.JFrame {

    /**
     * Creates new form AirportFrame
     */
    private int x, y;
    private ArrayList<Passenger> passengers;
    private ArrayList<Plane> planes;
    private ArrayList<Location> locations;
    private ArrayList<Flight> flights;

    public AirportFrame() {
        initComponents();

        this.passengers = new ArrayList<>();
        this.planes = new ArrayList<>();
        this.locations = new ArrayList<>();
        this.flights = new ArrayList<>();

        this.setBackground(new Color(0, 0, 0, 0));
        this.setLocationRelativeTo(null);

        this.generateMonths();
        this.generateDays();
        this.generateHours();
        this.generateMinutes();
        this.blockPanels();
    }

    private void blockPanels() {
        //9, 11
        for (int i = 1; i < Windows.getTabCount(); i++) {
            if (i != 9 && i != 11) {
                Windows.setEnabledAt(i, false);
            }
        }
    }

    private void generateMonths() {
        for (int i = 1; i < 13; i++) {
            MONTHPassenger.addItem("" + i);
            MONTHDeparture.addItem("" + i);
            MONTHPassengerUpdate.addItem("" + i);
        }
    }

    private void generateDays() {
        for (int i = 1; i < 32; i++) {
            DAYPassenger.addItem("" + i);
            DAYDeparture.addItem("" + i);
            DAYPassengerUpdate.addItem("" + i);
        }
    }

    private void generateHours() {
        for (int i = 0; i < 24; i++) {
            HOURDeparture.addItem("" + i);
            HOURDuration1.addItem("" + i);
            HOURDuration2.addItem("" + i);
            HourDelayFlightComboBox.addItem("" + i);
        }
    }

    private void generateMinutes() {
        for (int i = 0; i < 60; i++) {
            MinuteDeparture.addItem("" + i);
            MINUTEDuration1.addItem("" + i);
            MINUTEDuration2.addItem("" + i);
            MinuteDelayFlightComboBox.addItem("" + i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new core.views.PanelRound();
        panelRound2 = new core.views.PanelRound();
        jButton13 = new javax.swing.JButton();
        Windows = new javax.swing.JTabbedPane();
        AdministrationPanel = new javax.swing.JPanel();
        user = new javax.swing.JRadioButton();
        administrator = new javax.swing.JRadioButton();
        userSelect = new javax.swing.JComboBox<>();
        PassaengerRegistrationPanel = new javax.swing.JPanel();
        CountryLabel = new javax.swing.JLabel();
        IDPassengerLabel = new javax.swing.JLabel();
        FirstNameLabel = new javax.swing.JLabel();
        LastNameLabel = new javax.swing.JLabel();
        BirthdateLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CodePhoneTextField = new javax.swing.JTextField();
        IDPassengerTextField = new javax.swing.JTextField();
        YEARPassenger = new javax.swing.JTextField();
        CountryTextField = new javax.swing.JTextField();
        PhoneTextField = new javax.swing.JTextField();
        PhoneLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        LastNameTextFiel = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        MONTHPassenger = new javax.swing.JComboBox<>();
        FirstNameTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        DAYPassenger = new javax.swing.JComboBox<>();
        RegisterPassengerButton = new javax.swing.JButton();
        AirplaneRegistationPanel = new javax.swing.JPanel();
        IDAirplaneLabel = new javax.swing.JLabel();
        IDAirplaneTextField = new javax.swing.JTextField();
        BrandLabel = new javax.swing.JLabel();
        BrandTextField = new javax.swing.JTextField();
        ModelTextField = new javax.swing.JTextField();
        ModelLabel = new javax.swing.JLabel();
        MaxCapacityTextField = new javax.swing.JTextField();
        MaxCapacityLabel = new javax.swing.JLabel();
        AirlineTextField = new javax.swing.JTextField();
        AirlineLabel = new javax.swing.JLabel();
        CreateAirlineButton = new javax.swing.JButton();
        LocationRegistrationPanel = new javax.swing.JPanel();
        IDAirportLabel = new javax.swing.JLabel();
        IDAirportextField = new javax.swing.JTextField();
        AirportNameLabel = new javax.swing.JLabel();
        AirportNameTextField = new javax.swing.JTextField();
        AirportCityTextField = new javax.swing.JTextField();
        AirportCityLabel = new javax.swing.JLabel();
        AirportCountryLabel = new javax.swing.JLabel();
        AirportCountryTextField = new javax.swing.JTextField();
        AirportLatitudeTextField = new javax.swing.JTextField();
        AirportLatitudeLabel = new javax.swing.JLabel();
        AirportLongitudeabel = new javax.swing.JLabel();
        AirportLongitudeTextField = new javax.swing.JTextField();
        CreateLocationButton = new javax.swing.JButton();
        FlightRegistrationPane = new javax.swing.JPanel();
        IDFlightLabel = new javax.swing.JLabel();
        IDFlightTextField = new javax.swing.JTextField();
        PlaneLabel = new javax.swing.JLabel();
        PlaneComboBox = new javax.swing.JComboBox<>();
        DepartureLocationComboBox = new javax.swing.JComboBox<>();
        DepartureLocationLabel = new javax.swing.JLabel();
        ArrivalLocationComboBox = new javax.swing.JComboBox<>();
        ArrivalLocationLabel = new javax.swing.JLabel();
        ScaleLocationLabel = new javax.swing.JLabel();
        ScaleLocationComboBox = new javax.swing.JComboBox<>();
        Duration2Label = new javax.swing.JLabel();
        Duration1Label = new javax.swing.JLabel();
        DepartureDateLabel = new javax.swing.JLabel();
        YEARDeparture = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        MONTHDeparture = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        DAYDeparture = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        HOURDeparture = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        MinuteDeparture = new javax.swing.JComboBox<>();
        HOURDuration1 = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        MINUTEDuration1 = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        HOURDuration2 = new javax.swing.JComboBox<>();
        MINUTEDuration2 = new javax.swing.JComboBox<>();
        CreateFlightButton = new javax.swing.JButton();
        UpdateInfoPanel = new javax.swing.JPanel();
        IDPassengerUptdateLabel = new javax.swing.JLabel();
        IDPassengerUptdateTextField = new javax.swing.JTextField();
        FirstNameUptdateLabel = new javax.swing.JLabel();
        FirstNameUptdateTextField = new javax.swing.JTextField();
        LastNameUptdateLabel = new javax.swing.JLabel();
        LastNameUptdateTextField = new javax.swing.JTextField();
        BirthdateUptdateLabel = new javax.swing.JLabel();
        YEARPassengerUpdate = new javax.swing.JTextField();
        MONTHPassengerUpdate = new javax.swing.JComboBox<>();
        DAYPassengerUpdate = new javax.swing.JComboBox<>();
        PhoneUpdateTextField = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        CodePhoneUpdateTextField = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        PhoneUptdateLabel = new javax.swing.JLabel();
        CountryUptdateLabel = new javax.swing.JLabel();
        CountryUpdateTextField = new javax.swing.JTextField();
        UpdateInfoButton = new javax.swing.JButton();
        AddToFlightPanel = new javax.swing.JPanel();
        IDAddFlightTextField = new javax.swing.JTextField();
        IDAddFlightLabel = new javax.swing.JLabel();
        FlightLabel = new javax.swing.JLabel();
        FlightComboBox = new javax.swing.JComboBox<>();
        AddFlightButton = new javax.swing.JButton();
        ShowMyFlightsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ShowMyFlightsTable = new javax.swing.JTable();
        RefreshMyFlightsButton = new javax.swing.JButton();
        ShowAllPassengersPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ShowPassengersTable = new javax.swing.JTable();
        RefreshPassengersButton = new javax.swing.JButton();
        ShowAllFlightsPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ShowAllFlightsTable = new javax.swing.JTable();
        RefreshAllFlightsButton = new javax.swing.JButton();
        ShowAllPlanesPanel = new javax.swing.JPanel();
        RefreshPlanesButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        ShowPlanesTable = new javax.swing.JTable();
        ShowAllLocationsPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ShowLocationsLable = new javax.swing.JTable();
        RefreshLocationsButton = new javax.swing.JButton();
        DelayFlightsPanel = new javax.swing.JPanel();
        HourDelayFlightComboBox = new javax.swing.JComboBox<>();
        HoursDelayFlightLabel = new javax.swing.JLabel();
        IDDelayFlightLabel = new javax.swing.JLabel();
        IDDelayFlightLComboBox = new javax.swing.JComboBox<>();
        MintuesDelayFlightLabel = new javax.swing.JLabel();
        MinuteDelayFlightComboBox = new javax.swing.JComboBox<>();
        DelayFlightButton = new javax.swing.JButton();
        panelRound3 = new core.views.PanelRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelRound1.setRadius(40);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelRound2MouseDragged(evt);
            }
        });
        panelRound2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelRound2MousePressed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButton13.setText("X");
        jButton13.setBorderPainted(false);
        jButton13.setContentAreaFilled(false);
        jButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound2Layout.createSequentialGroup()
                .addContainerGap(1083, Short.MAX_VALUE)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addComponent(jButton13)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        panelRound1.add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, -1));

        Windows.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N

        AdministrationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        user.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        user.setText("User");
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        AdministrationPanel.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, -1, -1));

        administrator.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        administrator.setText("Administrator");
        administrator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administratorActionPerformed(evt);
            }
        });
        AdministrationPanel.add(administrator, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 164, -1, -1));

        userSelect.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        userSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User" }));
        userSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSelectActionPerformed(evt);
            }
        });
        AdministrationPanel.add(userSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 130, -1));

        Windows.addTab("Administration", AdministrationPanel);

        PassaengerRegistrationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CountryLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CountryLabel.setText("Country:");
        PassaengerRegistrationPanel.add(CountryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, -1, -1));

        IDPassengerLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IDPassengerLabel.setText("ID:");
        PassaengerRegistrationPanel.add(IDPassengerLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        FirstNameLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FirstNameLabel.setText("First Name:");
        PassaengerRegistrationPanel.add(FirstNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        LastNameLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        LastNameLabel.setText("Last Name:");
        PassaengerRegistrationPanel.add(LastNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        BirthdateLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        BirthdateLabel.setText("Birthdate:");
        PassaengerRegistrationPanel.add(BirthdateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel6.setText("+");
        PassaengerRegistrationPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 20, -1));

        CodePhoneTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassaengerRegistrationPanel.add(CodePhoneTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 50, -1));

        IDPassengerTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassaengerRegistrationPanel.add(IDPassengerTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 130, -1));

        YEARPassenger.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassaengerRegistrationPanel.add(YEARPassenger, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 90, -1));

        CountryTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassaengerRegistrationPanel.add(CountryTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 130, -1));

        PhoneTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassaengerRegistrationPanel.add(PhoneTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 130, -1));

        PhoneLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PhoneLabel.setText("Phone:");
        PassaengerRegistrationPanel.add(PhoneLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel8.setText("-");
        PassaengerRegistrationPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 30, -1));

        LastNameTextFiel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassaengerRegistrationPanel.add(LastNameTextFiel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 130, -1));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel9.setText("-");
        PassaengerRegistrationPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 30, -1));

        MONTHPassenger.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MONTHPassenger.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));
        PassaengerRegistrationPanel.add(MONTHPassenger, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        FirstNameTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassaengerRegistrationPanel.add(FirstNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 130, -1));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel10.setText("-");
        PassaengerRegistrationPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 280, 30, -1));

        DAYPassenger.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DAYPassenger.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));
        PassaengerRegistrationPanel.add(DAYPassenger, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, -1, -1));

        RegisterPassengerButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RegisterPassengerButton.setText("Register");
        RegisterPassengerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterPassengerButtonActionPerformed(evt);
            }
        });
        PassaengerRegistrationPanel.add(RegisterPassengerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, -1, -1));

        Windows.addTab("Passenger registration", PassaengerRegistrationPanel);

        AirplaneRegistationPanel.setLayout(null);

        IDAirplaneLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IDAirplaneLabel.setText("ID:");
        AirplaneRegistationPanel.add(IDAirplaneLabel);
        IDAirplaneLabel.setBounds(53, 96, 22, 25);

        IDAirplaneTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirplaneRegistationPanel.add(IDAirplaneTextField);
        IDAirplaneTextField.setBounds(180, 93, 130, 31);

        BrandLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        BrandLabel.setText("Brand:");
        AirplaneRegistationPanel.add(BrandLabel);
        BrandLabel.setBounds(53, 157, 50, 25);

        BrandTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirplaneRegistationPanel.add(BrandTextField);
        BrandTextField.setBounds(180, 154, 130, 31);

        ModelTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirplaneRegistationPanel.add(ModelTextField);
        ModelTextField.setBounds(180, 213, 130, 31);

        ModelLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ModelLabel.setText("Model:");
        AirplaneRegistationPanel.add(ModelLabel);
        ModelLabel.setBounds(53, 216, 55, 25);

        MaxCapacityTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirplaneRegistationPanel.add(MaxCapacityTextField);
        MaxCapacityTextField.setBounds(180, 273, 130, 31);

        MaxCapacityLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MaxCapacityLabel.setText("Max Capacity:");
        AirplaneRegistationPanel.add(MaxCapacityLabel);
        MaxCapacityLabel.setBounds(53, 276, 109, 25);

        AirlineTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirplaneRegistationPanel.add(AirlineTextField);
        AirlineTextField.setBounds(180, 333, 130, 31);

        AirlineLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirlineLabel.setText("Airline:");
        AirplaneRegistationPanel.add(AirlineLabel);
        AirlineLabel.setBounds(53, 336, 70, 25);

        CreateAirlineButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CreateAirlineButton.setText("Create");
        CreateAirlineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateAirlineButtonActionPerformed(evt);
            }
        });
        AirplaneRegistationPanel.add(CreateAirlineButton);
        CreateAirlineButton.setBounds(490, 480, 120, 40);

        Windows.addTab("Airplane registration", AirplaneRegistationPanel);

        IDAirportLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IDAirportLabel.setText("Airport ID:");

        IDAirportextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        AirportNameLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirportNameLabel.setText("Airport name:");

        AirportNameTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        AirportCityTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        AirportCityLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirportCityLabel.setText("Airport city:");

        AirportCountryLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirportCountryLabel.setText("Airport country:");

        AirportCountryTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        AirportLatitudeTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        AirportLatitudeLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirportLatitudeLabel.setText("Airport latitude:");

        AirportLongitudeabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirportLongitudeabel.setText("Airport longitude:");

        AirportLongitudeTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        CreateLocationButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CreateLocationButton.setText("Create");
        CreateLocationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateLocationButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LocationRegistrationPanelLayout = new javax.swing.GroupLayout(LocationRegistrationPanel);
        LocationRegistrationPanel.setLayout(LocationRegistrationPanelLayout);
        LocationRegistrationPanelLayout.setHorizontalGroup(
            LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LocationRegistrationPanelLayout.createSequentialGroup()
                .addGroup(LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LocationRegistrationPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IDAirportLabel)
                            .addComponent(AirportNameLabel)
                            .addComponent(AirportCityLabel)
                            .addComponent(AirportCountryLabel)
                            .addComponent(AirportLatitudeLabel)
                            .addComponent(AirportLongitudeabel))
                        .addGap(80, 80, 80)
                        .addGroup(LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AirportLongitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IDAirportextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AirportNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AirportCityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AirportCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AirportLatitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(LocationRegistrationPanelLayout.createSequentialGroup()
                        .addGap(515, 515, 515)
                        .addComponent(CreateLocationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(515, 515, 515))
        );
        LocationRegistrationPanelLayout.setVerticalGroup(
            LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LocationRegistrationPanelLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(LocationRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(IDAirportLabel)
                        .addGap(36, 36, 36)
                        .addComponent(AirportNameLabel)
                        .addGap(34, 34, 34)
                        .addComponent(AirportCityLabel)
                        .addGap(35, 35, 35)
                        .addComponent(AirportCountryLabel)
                        .addGap(35, 35, 35)
                        .addComponent(AirportLatitudeLabel))
                    .addGroup(LocationRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(IDAirportextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(AirportNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(AirportCityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(AirportCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(AirportLatitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(LocationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AirportLongitudeabel)
                    .addComponent(AirportLongitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(CreateLocationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        Windows.addTab("Location registration", LocationRegistrationPanel);

        IDFlightLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IDFlightLabel.setText("ID:");

        IDFlightTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        PlaneLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaneLabel.setText("Plane:");

        PlaneComboBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PlaneComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plane" }));

        DepartureLocationComboBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DepartureLocationComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        DepartureLocationLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DepartureLocationLabel.setText("Departure location:");

        ArrivalLocationComboBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ArrivalLocationComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        ArrivalLocationLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ArrivalLocationLabel.setText("Arrival location:");

        ScaleLocationLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ScaleLocationLabel.setText("Scale location:");

        ScaleLocationComboBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ScaleLocationComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        Duration2Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Duration2Label.setText("Duration:");

        Duration1Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Duration1Label.setText("Duration:");

        DepartureDateLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DepartureDateLabel.setText("Departure date:");

        YEARDeparture.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel30.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel30.setText("-");

        MONTHDeparture.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MONTHDeparture.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        jLabel31.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel31.setText("-");

        DAYDeparture.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DAYDeparture.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        jLabel32.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel32.setText("-");

        HOURDeparture.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        HOURDeparture.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabel33.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel33.setText("-");

        MinuteDeparture.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MinuteDeparture.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        HOURDuration1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        HOURDuration1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabel34.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel34.setText("-");

        MINUTEDuration1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MINUTEDuration1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        jLabel35.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel35.setText("-");

        HOURDuration2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        HOURDuration2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        MINUTEDuration2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MINUTEDuration2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        CreateFlightButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CreateFlightButton.setText("Create");
        CreateFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateFlightButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FlightRegistrationPaneLayout = new javax.swing.GroupLayout(FlightRegistrationPane);
        FlightRegistrationPane.setLayout(FlightRegistrationPaneLayout);
        FlightRegistrationPaneLayout.setHorizontalGroup(
            FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                        .addComponent(ScaleLocationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ScaleLocationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FlightRegistrationPaneLayout.createSequentialGroup()
                        .addComponent(ArrivalLocationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ArrivalLocationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                        .addComponent(DepartureLocationLabel)
                        .addGap(46, 46, 46)
                        .addComponent(DepartureLocationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                        .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IDFlightLabel)
                            .addComponent(PlaneLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(IDFlightTextField)
                            .addComponent(PlaneComboBox, 0, 130, Short.MAX_VALUE))))
                .addGap(45, 45, 45)
                .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Duration2Label)
                    .addComponent(Duration1Label)
                    .addComponent(DepartureDateLabel))
                .addGap(18, 18, 18)
                .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                        .addComponent(YEARDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(MONTHDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(DAYDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(HOURDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(MinuteDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                        .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                                .addComponent(HOURDuration1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(MINUTEDuration1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                                .addComponent(HOURDuration2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(MINUTEDuration2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FlightRegistrationPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CreateFlightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(530, 530, 530))
        );
        FlightRegistrationPaneLayout.setVerticalGroup(
            FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(IDFlightLabel))
                    .addComponent(IDFlightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlaneLabel)
                    .addComponent(PlaneComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HOURDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(MinuteDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FlightRegistrationPaneLayout.createSequentialGroup()
                        .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(DepartureLocationLabel)
                                .addComponent(DepartureLocationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DepartureDateLabel))
                            .addComponent(YEARDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MONTHDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31)
                            .addComponent(DAYDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ArrivalLocationLabel)
                                .addComponent(ArrivalLocationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Duration1Label))
                            .addComponent(HOURDuration1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34)
                            .addComponent(MINUTEDuration1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(HOURDuration2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Duration2Label))
                            .addComponent(jLabel35)
                            .addComponent(MINUTEDuration2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FlightRegistrationPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ScaleLocationLabel)
                                .addComponent(ScaleLocationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(CreateFlightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        Windows.addTab("Flight registration", FlightRegistrationPane);

        IDPassengerUptdateLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IDPassengerUptdateLabel.setText("ID:");

        IDPassengerUptdateTextField.setEditable(false);
        IDPassengerUptdateTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IDPassengerUptdateTextField.setEnabled(false);

        FirstNameUptdateLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FirstNameUptdateLabel.setText("First Name:");

        FirstNameUptdateTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        LastNameUptdateLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        LastNameUptdateLabel.setText("Last Name:");

        LastNameUptdateTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        BirthdateUptdateLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        BirthdateUptdateLabel.setText("Birthdate:");

        YEARPassengerUpdate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        MONTHPassengerUpdate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MONTHPassengerUpdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        DAYPassengerUpdate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DAYPassengerUpdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        PhoneUpdateTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel40.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel40.setText("-");

        CodePhoneUpdateTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel41.setText("+");

        PhoneUptdateLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PhoneUptdateLabel.setText("Phone:");

        CountryUptdateLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CountryUptdateLabel.setText("Country:");

        CountryUpdateTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        UpdateInfoButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        UpdateInfoButton.setText("Update");
        UpdateInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateInfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UpdateInfoPanelLayout = new javax.swing.GroupLayout(UpdateInfoPanel);
        UpdateInfoPanel.setLayout(UpdateInfoPanelLayout);
        UpdateInfoPanelLayout.setHorizontalGroup(
            UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                                .addComponent(IDPassengerUptdateLabel)
                                .addGap(108, 108, 108)
                                .addComponent(IDPassengerUptdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                                .addComponent(FirstNameUptdateLabel)
                                .addGap(41, 41, 41)
                                .addComponent(FirstNameUptdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                                .addComponent(LastNameUptdateLabel)
                                .addGap(43, 43, 43)
                                .addComponent(LastNameUptdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                                .addComponent(BirthdateUptdateLabel)
                                .addGap(55, 55, 55)
                                .addComponent(YEARPassengerUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(MONTHPassengerUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(DAYPassengerUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                                .addComponent(PhoneUptdateLabel)
                                .addGap(56, 56, 56)
                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(CodePhoneUpdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(PhoneUpdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                                .addComponent(CountryUptdateLabel)
                                .addGap(63, 63, 63)
                                .addComponent(CountryUpdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(UpdateInfoButton)))
                .addContainerGap(555, Short.MAX_VALUE))
        );
        UpdateInfoPanelLayout.setVerticalGroup(
            UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateInfoPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IDPassengerUptdateLabel)
                    .addComponent(IDPassengerUptdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FirstNameUptdateLabel)
                    .addComponent(FirstNameUptdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LastNameUptdateLabel)
                    .addComponent(LastNameUptdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BirthdateUptdateLabel)
                    .addComponent(YEARPassengerUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MONTHPassengerUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DAYPassengerUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PhoneUptdateLabel)
                    .addComponent(jLabel41)
                    .addComponent(CodePhoneUpdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(PhoneUpdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(UpdateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CountryUptdateLabel)
                    .addComponent(CountryUpdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(UpdateInfoButton)
                .addGap(113, 113, 113))
        );

        Windows.addTab("Update info", UpdateInfoPanel);

        IDAddFlightTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IDAddFlightTextField.setEnabled(false);

        IDAddFlightLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IDAddFlightLabel.setText("ID:");

        FlightLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FlightLabel.setText("Flight:");

        FlightComboBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FlightComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flight" }));

        AddFlightButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AddFlightButton.setText("Add");
        AddFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddFlightButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddToFlightPanelLayout = new javax.swing.GroupLayout(AddToFlightPanel);
        AddToFlightPanel.setLayout(AddToFlightPanelLayout);
        AddToFlightPanelLayout.setHorizontalGroup(
            AddToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddToFlightPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(AddToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IDAddFlightLabel)
                    .addComponent(FlightLabel))
                .addGap(79, 79, 79)
                .addGroup(AddToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FlightComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IDAddFlightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(829, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddToFlightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AddFlightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(509, 509, 509))
        );
        AddToFlightPanelLayout.setVerticalGroup(
            AddToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddToFlightPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(AddToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddToFlightPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(IDAddFlightLabel))
                    .addComponent(IDAddFlightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(AddToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FlightLabel)
                    .addComponent(FlightComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                .addComponent(AddFlightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );

        Windows.addTab("Add to flight", AddToFlightPanel);

        ShowMyFlightsTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ShowMyFlightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Departure Date", "Arrival Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ShowMyFlightsTable);

        RefreshMyFlightsButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshMyFlightsButton.setText("Refresh");
        RefreshMyFlightsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshMyFlightsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowMyFlightsPanelLayout = new javax.swing.GroupLayout(ShowMyFlightsPanel);
        ShowMyFlightsPanel.setLayout(ShowMyFlightsPanelLayout);
        ShowMyFlightsPanelLayout.setHorizontalGroup(
            ShowMyFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowMyFlightsPanelLayout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowMyFlightsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RefreshMyFlightsButton)
                .addGap(527, 527, 527))
        );
        ShowMyFlightsPanelLayout.setVerticalGroup(
            ShowMyFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowMyFlightsPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(RefreshMyFlightsButton)
                .addContainerGap())
        );

        Windows.addTab("Show my flights", ShowMyFlightsPanel);

        ShowPassengersTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ShowPassengersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Birthdate", "Age", "Phone", "Country", "Num Flight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ShowPassengersTable);

        RefreshPassengersButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshPassengersButton.setText("Refresh");
        RefreshPassengersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshPassengersButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowAllPassengersPanelLayout = new javax.swing.GroupLayout(ShowAllPassengersPanel);
        ShowAllPassengersPanel.setLayout(ShowAllPassengersPanelLayout);
        ShowAllPassengersPanelLayout.setHorizontalGroup(
            ShowAllPassengersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAllPassengersPanelLayout.createSequentialGroup()
                .addGroup(ShowAllPassengersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ShowAllPassengersPanelLayout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(RefreshPassengersButton))
                    .addGroup(ShowAllPassengersPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        ShowAllPassengersPanelLayout.setVerticalGroup(
            ShowAllPassengersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowAllPassengersPanelLayout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(RefreshPassengersButton)
                .addContainerGap())
        );

        Windows.addTab("Show all passengers", ShowAllPassengersPanel);

        ShowAllFlightsTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ShowAllFlightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Departure Airport ID", "Arrival Airport ID", "Scale Airport ID", "Departure Date", "Arrival Date", "Plane ID", "Number Passengers"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(ShowAllFlightsTable);

        RefreshAllFlightsButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshAllFlightsButton.setText("Refresh");
        RefreshAllFlightsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshAllFlightsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowAllFlightsPanelLayout = new javax.swing.GroupLayout(ShowAllFlightsPanel);
        ShowAllFlightsPanel.setLayout(ShowAllFlightsPanelLayout);
        ShowAllFlightsPanelLayout.setHorizontalGroup(
            ShowAllFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAllFlightsPanelLayout.createSequentialGroup()
                .addGroup(ShowAllFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ShowAllFlightsPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ShowAllFlightsPanelLayout.createSequentialGroup()
                        .addGap(521, 521, 521)
                        .addComponent(RefreshAllFlightsButton)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        ShowAllFlightsPanelLayout.setVerticalGroup(
            ShowAllFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAllFlightsPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(RefreshAllFlightsButton)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        Windows.addTab("Show all flights", ShowAllFlightsPanel);

        RefreshPlanesButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshPlanesButton.setText("Refresh");
        RefreshPlanesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshPlanesButtonActionPerformed(evt);
            }
        });

        ShowPlanesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Brand", "Model", "Max Capacity", "Airline", "Number Flights"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(ShowPlanesTable);

        javax.swing.GroupLayout ShowAllPlanesPanelLayout = new javax.swing.GroupLayout(ShowAllPlanesPanel);
        ShowAllPlanesPanel.setLayout(ShowAllPlanesPanelLayout);
        ShowAllPlanesPanelLayout.setHorizontalGroup(
            ShowAllPlanesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAllPlanesPanelLayout.createSequentialGroup()
                .addGroup(ShowAllPlanesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ShowAllPlanesPanelLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(RefreshPlanesButton))
                    .addGroup(ShowAllPlanesPanelLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        ShowAllPlanesPanelLayout.setVerticalGroup(
            ShowAllPlanesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowAllPlanesPanelLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(RefreshPlanesButton)
                .addGap(17, 17, 17))
        );

        Windows.addTab("Show all planes", ShowAllPlanesPanel);

        ShowLocationsLable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airport ID", "Airport Name", "City", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(ShowLocationsLable);

        RefreshLocationsButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshLocationsButton.setText("Refresh");
        RefreshLocationsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshLocationsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowAllLocationsPanelLayout = new javax.swing.GroupLayout(ShowAllLocationsPanel);
        ShowAllLocationsPanel.setLayout(ShowAllLocationsPanelLayout);
        ShowAllLocationsPanelLayout.setHorizontalGroup(
            ShowAllLocationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAllLocationsPanelLayout.createSequentialGroup()
                .addGroup(ShowAllLocationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ShowAllLocationsPanelLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(RefreshLocationsButton))
                    .addGroup(ShowAllLocationsPanelLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        ShowAllLocationsPanelLayout.setVerticalGroup(
            ShowAllLocationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowAllLocationsPanelLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(RefreshLocationsButton)
                .addGap(17, 17, 17))
        );

        Windows.addTab("Show all locations", ShowAllLocationsPanel);

        HourDelayFlightComboBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        HourDelayFlightComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        HoursDelayFlightLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        HoursDelayFlightLabel.setText("Hours:");

        IDDelayFlightLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IDDelayFlightLabel.setText("ID:");

        IDDelayFlightLComboBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IDDelayFlightLComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID" }));

        MintuesDelayFlightLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MintuesDelayFlightLabel.setText("Minutes:");

        MinuteDelayFlightComboBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MinuteDelayFlightComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        DelayFlightButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DelayFlightButton.setText("Delay");
        DelayFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelayFlightButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DelayFlightsPanelLayout = new javax.swing.GroupLayout(DelayFlightsPanel);
        DelayFlightsPanel.setLayout(DelayFlightsPanelLayout);
        DelayFlightsPanelLayout.setHorizontalGroup(
            DelayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DelayFlightsPanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(DelayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DelayFlightsPanelLayout.createSequentialGroup()
                        .addComponent(MintuesDelayFlightLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MinuteDelayFlightComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DelayFlightsPanelLayout.createSequentialGroup()
                        .addGroup(DelayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IDDelayFlightLabel)
                            .addComponent(HoursDelayFlightLabel))
                        .addGap(79, 79, 79)
                        .addGroup(DelayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HourDelayFlightComboBox, 0, 105, Short.MAX_VALUE)
                            .addComponent(IDDelayFlightLComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(820, 820, 820))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DelayFlightsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DelayFlightButton)
                .addGap(531, 531, 531))
        );
        DelayFlightsPanelLayout.setVerticalGroup(
            DelayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DelayFlightsPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(DelayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IDDelayFlightLabel)
                    .addComponent(IDDelayFlightLComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(DelayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HoursDelayFlightLabel)
                    .addComponent(HourDelayFlightComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(DelayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MintuesDelayFlightLabel)
                    .addComponent(MinuteDelayFlightComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(DelayFlightButton)
                .addGap(33, 33, 33))
        );

        Windows.addTab("Delay flight", DelayFlightsPanel);

        panelRound1.add(Windows, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, 1150, 620));

        javax.swing.GroupLayout panelRound3Layout = new javax.swing.GroupLayout(panelRound3);
        panelRound3.setLayout(panelRound3Layout);
        panelRound3Layout.setHorizontalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
        );
        panelRound3Layout.setVerticalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        panelRound1.add(panelRound3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 660, 1150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void panelRound2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_panelRound2MousePressed

    private void panelRound2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_panelRound2MouseDragged

    private void administratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administratorActionPerformed
        if (user.isSelected()) {
            user.setSelected(false);
            userSelect.setSelectedIndex(0);

        }
        for (int i = 1; i < Windows.getTabCount(); i++) {
                Windows.setEnabledAt(i, true);
        }
        Windows.setEnabledAt(5, false);
        Windows.setEnabledAt(6, false);
    }//GEN-LAST:event_administratorActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        if (administrator.isSelected()) {
            administrator.setSelected(false);
        }
        for (int i = 1; i < Windows.getTabCount(); i++) {

            Windows.setEnabledAt(i, false);

        }
        Windows.setEnabledAt(9, true);
        Windows.setEnabledAt(5, true);
        Windows.setEnabledAt(6, true);
        Windows.setEnabledAt(7, true);
        Windows.setEnabledAt(11, true);
    }//GEN-LAST:event_userActionPerformed

    private void RegisterPassengerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterPassengerButtonActionPerformed
        // TODO add your handling code here:
        long id = Long.parseLong(IDPassengerTextField.getText());
        String firstname = FirstNameTextField.getText();
        String lastname = LastNameTextFiel.getText();
        int year = Integer.parseInt(YEARPassenger.getText());
        int month = Integer.parseInt(MONTHPassenger.getItemAt(MONTHPassenger.getSelectedIndex()));
        int day = Integer.parseInt(DAYPassenger.getItemAt(DAYPassenger.getSelectedIndex()));
        int phoneCode = Integer.parseInt(CodePhoneTextField.getText());
        long phone = Long.parseLong(PhoneTextField.getText());
        String country = CountryTextField.getText();

        LocalDate birthDate = LocalDate.of(year, month, day);

        this.passengers.add(new Passenger(id, firstname, lastname, birthDate, phoneCode, phone, country));
        this.userSelect.addItem("" + id);
    }//GEN-LAST:event_RegisterPassengerButtonActionPerformed

    private void CreateAirlineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateAirlineButtonActionPerformed
        // TODO add your handling code here:
        String id = IDAirplaneTextField.getText();
        String brand = BrandTextField.getText();
        String model = ModelTextField.getText();
        int maxCapacity = Integer.parseInt(MaxCapacityTextField.getText());
        String airline = AirlineTextField.getText();

        this.planes.add(new Plane(id, brand, model, maxCapacity, airline));

        this.PlaneComboBox.addItem(id);
    }//GEN-LAST:event_CreateAirlineButtonActionPerformed

    private void CreateLocationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateLocationButtonActionPerformed
        // TODO add your handling code here:
        String id = IDAirportextField.getText();
        String name = AirportNameTextField.getText();
        String city = AirportCityTextField.getText();
        String country = AirportCountryTextField.getText();
        double latitude = Double.parseDouble(AirportLatitudeTextField.getText());
        double longitude = Double.parseDouble(AirportLongitudeTextField.getText());

        this.locations.add(new Location(id, name, city, country, latitude, longitude));

        this.DepartureLocationComboBox.addItem(id);
        this.ArrivalLocationComboBox.addItem(id);
        this.ScaleLocationComboBox.addItem(id);
    }//GEN-LAST:event_CreateLocationButtonActionPerformed

    private void CreateFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateFlightButtonActionPerformed
        // TODO add your handling code here:
        String id = IDFlightTextField.getText();
        String planeId = PlaneComboBox.getItemAt(PlaneComboBox.getSelectedIndex());
        String departureLocationId = DepartureLocationComboBox.getItemAt(DepartureLocationComboBox.getSelectedIndex());
        String arrivalLocationId = ArrivalLocationComboBox.getItemAt(ArrivalLocationComboBox.getSelectedIndex());
        String scaleLocationId = ScaleLocationComboBox.getItemAt(ScaleLocationComboBox.getSelectedIndex());
        int year = Integer.parseInt(YEARDeparture.getText());
        int month = Integer.parseInt(MONTHDeparture.getItemAt(MONTHDeparture.getSelectedIndex()));
        int day = Integer.parseInt(DAYDeparture.getItemAt(DAYDeparture.getSelectedIndex()));
        int hour = Integer.parseInt(HOURDeparture.getItemAt(HOURDeparture.getSelectedIndex()));
        int minutes = Integer.parseInt(MinuteDeparture.getItemAt(MinuteDeparture.getSelectedIndex()));
        int hoursDurationsArrival = Integer.parseInt(HOURDuration1.getItemAt(HOURDuration1.getSelectedIndex()));
        int minutesDurationsArrival = Integer.parseInt(MINUTEDuration1.getItemAt(MINUTEDuration1.getSelectedIndex()));
        int hoursDurationsScale = Integer.parseInt(HOURDuration2.getItemAt(HOURDuration2.getSelectedIndex()));
        int minutesDurationsScale = Integer.parseInt(MINUTEDuration2.getItemAt(MINUTEDuration2.getSelectedIndex()));

        LocalDateTime departureDate = LocalDateTime.of(year, month, day, hour, minutes);

        Plane plane = null;
        for (Plane p : this.planes) {
            if (planeId.equals(p.getId())) {
                plane = p;
            }
        }

        Location departure = null;
        Location arrival = null;
        Location scale = null;
        for (Location location : this.locations) {
            if (departureLocationId.equals(location.getAirportId())) {
                departure = location;
            }
            if (arrivalLocationId.equals(location.getAirportId())) {
                arrival = location;
            }
            if (scaleLocationId.equals(location.getAirportId())) {
                scale = location;
            }
        }

        if (scale == null) {
            this.flights.add(new Flight(id, plane, departure, arrival, departureDate, hoursDurationsArrival, minutesDurationsArrival));
        } else {
            this.flights.add(new Flight(id, plane, departure, scale, arrival, departureDate, hoursDurationsArrival, minutesDurationsArrival, hoursDurationsScale, minutesDurationsScale));
        }

        this.FlightComboBox.addItem(id);
    }//GEN-LAST:event_CreateFlightButtonActionPerformed

    private void UpdateInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateInfoButtonActionPerformed
        // TODO add your handling code here:
        long id = Long.parseLong(IDPassengerUptdateTextField.getText());
        String firstname = FirstNameUptdateTextField.getText();
        String lastname = LastNameUptdateTextField.getText();
        int year = Integer.parseInt(YEARPassengerUpdate.getText());
        int month = Integer.parseInt(MONTHPassenger.getItemAt(MONTHPassengerUpdate.getSelectedIndex()));
        int day = Integer.parseInt(DAYPassenger.getItemAt(DAYPassengerUpdate.getSelectedIndex()));
        int phoneCode = Integer.parseInt(CodePhoneUpdateTextField.getText());
        long phone = Long.parseLong(PhoneUpdateTextField.getText());
        String country = CountryUpdateTextField.getText();

        LocalDate birthDate = LocalDate.of(year, month, day);

        Passenger passenger = null;
        for (Passenger p : this.passengers) {
            if (p.getId() == id) {
                passenger = p;
            }
        }

        passenger.setFirstname(firstname);
        passenger.setLastname(lastname);
        passenger.setBirthDate(birthDate);
        passenger.setCountryPhoneCode(phoneCode);
        passenger.setPhone(phone);
        passenger.setCountry(country);
    }//GEN-LAST:event_UpdateInfoButtonActionPerformed

    private void AddFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddFlightButtonActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(IDAddFlightTextField.getText());
        String flightId = FlightComboBox.getItemAt(FlightComboBox.getSelectedIndex());

        Passenger passenger = null;
        Flight flight = null;

        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        passenger.addFlight(flight);
        flight.addPassenger(passenger);
    }//GEN-LAST:event_AddFlightButtonActionPerformed

    private void DelayFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelayFlightButtonActionPerformed
        // TODO add your handling code here:
        String flightId = IDDelayFlightLComboBox.getItemAt(IDDelayFlightLComboBox.getSelectedIndex());
        int hours = Integer.parseInt(HourDelayFlightComboBox.getItemAt(HourDelayFlightComboBox.getSelectedIndex()));
        int minutes = Integer.parseInt(MinuteDelayFlightComboBox.getItemAt(MinuteDelayFlightComboBox.getSelectedIndex()));

        Flight flight = null;
        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        flight.delay(hours, minutes);
    }//GEN-LAST:event_DelayFlightButtonActionPerformed

    private void RefreshMyFlightsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshMyFlightsButtonActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(userSelect.getItemAt(userSelect.getSelectedIndex()));

        Passenger passenger = null;
        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        ArrayList<Flight> flights = passenger.getFlights();
        DefaultTableModel model = (DefaultTableModel) ShowMyFlightsTable.getModel();
        model.setRowCount(0);
        for (Flight flight : flights) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureDate(), flight.calculateArrivalDate()});
        }
    }//GEN-LAST:event_RefreshMyFlightsButtonActionPerformed

    private void RefreshPassengersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshPassengersButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ShowPassengersTable.getModel();
        model.setRowCount(0);
        for (Passenger passenger : this.passengers) {
            model.addRow(new Object[]{passenger.getId(), passenger.getFullname(), passenger.getBirthDate(), passenger.calculateAge(), passenger.generateFullPhone(), passenger.getCountry(), passenger.getNumFlights()});
        }
    }//GEN-LAST:event_RefreshPassengersButtonActionPerformed

    private void RefreshAllFlightsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshAllFlightsButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ShowAllFlightsTable.getModel();
        model.setRowCount(0);
        for (Flight flight : this.flights) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureLocation().getAirportId(), flight.getArrivalLocation().getAirportId(), (flight.getScaleLocation() == null ? "-" : flight.getScaleLocation().getAirportId()), flight.getDepartureDate(), flight.calculateArrivalDate(), flight.getPlane().getId(), flight.getNumPassengers()});
        }
    }//GEN-LAST:event_RefreshAllFlightsButtonActionPerformed

    private void RefreshPlanesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshPlanesButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ShowPlanesTable.getModel();
        model.setRowCount(0);
        for (Plane plane : this.planes) {
            model.addRow(new Object[]{plane.getId(), plane.getBrand(), plane.getModel(), plane.getMaxCapacity(), plane.getAirline(), plane.getNumFlights()});
        }
    }//GEN-LAST:event_RefreshPlanesButtonActionPerformed

    private void RefreshLocationsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshLocationsButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ShowLocationsLable.getModel();
        model.setRowCount(0);
        for (Location location : this.locations) {
            model.addRow(new Object[]{location.getAirportId(), location.getAirportName(), location.getAirportCity(), location.getAirportCountry()});
        }
    }//GEN-LAST:event_RefreshLocationsButtonActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void userSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSelectActionPerformed
        try {
            String id = userSelect.getSelectedItem().toString();
            if (! id.equals(userSelect.getItemAt(0))) {
                IDPassengerUptdateTextField.setText(id);
                IDAddFlightTextField.setText(id);
            }
            else{
                IDPassengerUptdateTextField.setText("");
                IDAddFlightTextField.setText("");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_userSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        System.setProperty("flatlaf.useNativeLibrary", "false");

        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AirportFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddFlightButton;
    private javax.swing.JPanel AddToFlightPanel;
    private javax.swing.JPanel AdministrationPanel;
    private javax.swing.JLabel AirlineLabel;
    private javax.swing.JTextField AirlineTextField;
    private javax.swing.JPanel AirplaneRegistationPanel;
    private javax.swing.JLabel AirportCityLabel;
    private javax.swing.JTextField AirportCityTextField;
    private javax.swing.JLabel AirportCountryLabel;
    private javax.swing.JTextField AirportCountryTextField;
    private javax.swing.JLabel AirportLatitudeLabel;
    private javax.swing.JTextField AirportLatitudeTextField;
    private javax.swing.JTextField AirportLongitudeTextField;
    private javax.swing.JLabel AirportLongitudeabel;
    private javax.swing.JLabel AirportNameLabel;
    private javax.swing.JTextField AirportNameTextField;
    private javax.swing.JComboBox<String> ArrivalLocationComboBox;
    private javax.swing.JLabel ArrivalLocationLabel;
    private javax.swing.JLabel BirthdateLabel;
    private javax.swing.JLabel BirthdateUptdateLabel;
    private javax.swing.JLabel BrandLabel;
    private javax.swing.JTextField BrandTextField;
    private javax.swing.JTextField CodePhoneTextField;
    private javax.swing.JTextField CodePhoneUpdateTextField;
    private javax.swing.JLabel CountryLabel;
    private javax.swing.JTextField CountryTextField;
    private javax.swing.JTextField CountryUpdateTextField;
    private javax.swing.JLabel CountryUptdateLabel;
    private javax.swing.JButton CreateAirlineButton;
    private javax.swing.JButton CreateFlightButton;
    private javax.swing.JButton CreateLocationButton;
    private javax.swing.JComboBox<String> DAYDeparture;
    private javax.swing.JComboBox<String> DAYPassenger;
    private javax.swing.JComboBox<String> DAYPassengerUpdate;
    private javax.swing.JButton DelayFlightButton;
    private javax.swing.JPanel DelayFlightsPanel;
    private javax.swing.JLabel DepartureDateLabel;
    private javax.swing.JComboBox<String> DepartureLocationComboBox;
    private javax.swing.JLabel DepartureLocationLabel;
    private javax.swing.JLabel Duration1Label;
    private javax.swing.JLabel Duration2Label;
    private javax.swing.JLabel FirstNameLabel;
    private javax.swing.JTextField FirstNameTextField;
    private javax.swing.JLabel FirstNameUptdateLabel;
    private javax.swing.JTextField FirstNameUptdateTextField;
    private javax.swing.JComboBox<String> FlightComboBox;
    private javax.swing.JLabel FlightLabel;
    private javax.swing.JPanel FlightRegistrationPane;
    private javax.swing.JComboBox<String> HOURDeparture;
    private javax.swing.JComboBox<String> HOURDuration1;
    private javax.swing.JComboBox<String> HOURDuration2;
    private javax.swing.JComboBox<String> HourDelayFlightComboBox;
    private javax.swing.JLabel HoursDelayFlightLabel;
    private javax.swing.JLabel IDAddFlightLabel;
    private javax.swing.JTextField IDAddFlightTextField;
    private javax.swing.JLabel IDAirplaneLabel;
    private javax.swing.JTextField IDAirplaneTextField;
    private javax.swing.JLabel IDAirportLabel;
    private javax.swing.JTextField IDAirportextField;
    private javax.swing.JComboBox<String> IDDelayFlightLComboBox;
    private javax.swing.JLabel IDDelayFlightLabel;
    private javax.swing.JLabel IDFlightLabel;
    private javax.swing.JTextField IDFlightTextField;
    private javax.swing.JLabel IDPassengerLabel;
    private javax.swing.JTextField IDPassengerTextField;
    private javax.swing.JLabel IDPassengerUptdateLabel;
    private javax.swing.JTextField IDPassengerUptdateTextField;
    private javax.swing.JLabel LastNameLabel;
    private javax.swing.JTextField LastNameTextFiel;
    private javax.swing.JLabel LastNameUptdateLabel;
    private javax.swing.JTextField LastNameUptdateTextField;
    private javax.swing.JPanel LocationRegistrationPanel;
    private javax.swing.JComboBox<String> MINUTEDuration1;
    private javax.swing.JComboBox<String> MINUTEDuration2;
    private javax.swing.JComboBox<String> MONTHDeparture;
    private javax.swing.JComboBox<String> MONTHPassenger;
    private javax.swing.JComboBox<String> MONTHPassengerUpdate;
    private javax.swing.JLabel MaxCapacityLabel;
    private javax.swing.JTextField MaxCapacityTextField;
    private javax.swing.JLabel MintuesDelayFlightLabel;
    private javax.swing.JComboBox<String> MinuteDelayFlightComboBox;
    private javax.swing.JComboBox<String> MinuteDeparture;
    private javax.swing.JLabel ModelLabel;
    private javax.swing.JTextField ModelTextField;
    private javax.swing.JPanel PassaengerRegistrationPanel;
    private javax.swing.JLabel PhoneLabel;
    private javax.swing.JTextField PhoneTextField;
    private javax.swing.JTextField PhoneUpdateTextField;
    private javax.swing.JLabel PhoneUptdateLabel;
    private javax.swing.JComboBox<String> PlaneComboBox;
    private javax.swing.JLabel PlaneLabel;
    private javax.swing.JButton RefreshAllFlightsButton;
    private javax.swing.JButton RefreshLocationsButton;
    private javax.swing.JButton RefreshMyFlightsButton;
    private javax.swing.JButton RefreshPassengersButton;
    private javax.swing.JButton RefreshPlanesButton;
    private javax.swing.JButton RegisterPassengerButton;
    private javax.swing.JComboBox<String> ScaleLocationComboBox;
    private javax.swing.JLabel ScaleLocationLabel;
    private javax.swing.JPanel ShowAllFlightsPanel;
    private javax.swing.JTable ShowAllFlightsTable;
    private javax.swing.JPanel ShowAllLocationsPanel;
    private javax.swing.JPanel ShowAllPassengersPanel;
    private javax.swing.JPanel ShowAllPlanesPanel;
    private javax.swing.JTable ShowLocationsLable;
    private javax.swing.JPanel ShowMyFlightsPanel;
    private javax.swing.JTable ShowMyFlightsTable;
    private javax.swing.JTable ShowPassengersTable;
    private javax.swing.JTable ShowPlanesTable;
    private javax.swing.JButton UpdateInfoButton;
    private javax.swing.JPanel UpdateInfoPanel;
    private javax.swing.JTabbedPane Windows;
    private javax.swing.JTextField YEARDeparture;
    private javax.swing.JTextField YEARPassenger;
    private javax.swing.JTextField YEARPassengerUpdate;
    private javax.swing.JRadioButton administrator;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private core.views.PanelRound panelRound1;
    private core.views.PanelRound panelRound2;
    private core.views.PanelRound panelRound3;
    private javax.swing.JRadioButton user;
    private javax.swing.JComboBox<String> userSelect;
    // End of variables declaration//GEN-END:variables
}
